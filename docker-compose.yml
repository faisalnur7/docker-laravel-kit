# To communicate the containers with each other
networks:
  laravel:
    name: laravel


# All images and containers
services:
  nginx:
    build: 
      context: .
      dockerfile: nginx.dockerfile
    container_name: laravel_nginx
    tty: true #to work in terminal
    depends_on:
      - php
      - mysql
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel
  php:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: laravel_php
    restart: unless-stopped
    tty: true
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel
  mysql:
    image: mysql:latest
    container_name: laravel_mysql
    ports:
      - 3306:3306
    volumes:
      - ./mysql:/var/lib/mysql:rw
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    networks:
      - laravel
    user: mysql
    privileged: true
  composer:
    image: composer:latest
    container_name: laravel_composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    command: ["install","--ignore-platform-reqs"]
    depends_on:
      - php
    networks:
      - laravel
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
        - 'mysql:mysql'
    ports:
        - '8080:80'
    environment:
        MYSQL_USERNAME: laravel
        MYSQL_ROOT_PASSWORD: password
        PMA_HOST: mysql
    networks:
        - laravel
    depends_on:
        - mysql
  artisan:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: laravel_artisan
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php","artisan"]
    networks:
      - laravel
  
  npm:
    image: node:20.11.1
    container_name: laravel_npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["npm"]
    networks:
      - laravel

  mailpit:
    image: axllent/mailpit:latest
    container_name: laravel_mailpit
    ports:
      - 1024:1024
      - 8025:8025
    networks:
      - laravel
  
  redis:
    image: redis:alpine
    container_name: laravel_redis
    ports:
      - 6379:6379
    volumes:
      - './redisdata:/data'
    networks:
      - laravel
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      timeout: 5s
      retries: 5
      start_period: 30s
